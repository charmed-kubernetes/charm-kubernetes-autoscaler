# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

options:
  juju_api_endpoints:
    type: string
    default: ""
    description: |
      In order to add and remove juju units, provide the api endpoints of each juju controller
      which contains the model/application in which to scale. By leaving empty, the application
      will scale according to the current juju controller's api endpoints.
      
      multiple endpoints may be provided by separating with commas
      example)
      juju_api_endpoint: '10.2.3.7:17070, 10.2.3.8:17070, 10.2.3.9:17070'
      juju_api_endpoint: 'my-juju-controller:17070'
  juju_ca_cert:
    type: string
    default: ""
    description: |
      Juju controller CA certificate (base64 encoded)
  juju_username:
    type: string
    default: ""
    description: |
      Juju account username associated with the controller
  juju_password:
    type: string
    default: ""
    description: |
      Juju account password associated with the controller
  juju_default_model_uuid:
    type: string
    default: ""
    description: |
      Juju Model UUID to use if not explicity specified by `juju_scale`.
  juju_scale:
    type: string
    default: ""
    description: |-
      yaml or json list associated with the autoscaler node-groups define parameters about 
      the node-group. Each item in the node-group list can be defined as the following yaml
      or json structure with the necessary components:

        min         [REQUIRED] [int] # minimum number of workers within the node-group
        max         [REQUIRED] [int] # maximum number of workers within the node-group 
        application [REQUIRED] [str] # name of the application within the juju model 
                                       to scale up or down
        model       [OPTIONAL] [str] # name of the model within which the associated 
                                     # application is deployed. If unspecified, defaults 
                                     # to the value within `juju_default_model_uuid`.
                                     # if unspecified, this node-group will simply be ignored

      The following example shows how to create juju-scale config on the shell for two
      applications which have different scale requirements and differenet models. The first
      application defines an explicit model, the second application uses the juju_default_model_uuid
      
      examples
        # Simple
        juju config kubernetes-autoscaler juju_scale="- {min: 3, max: 5, application: kubernetes-worker}"

        # More complex
        cat << EOF > juju_scale.yaml
        ---
        -                                                                    # explicit model
          application: kubernetes-worker-amd64
          max: 10
          min: 3
          model: cdcaed9f-336d-47d3-83ba-d9ea9047b18c                        
        - {"min": 0, "max": 3, "application": "kubernetes-worker-amd64"}     # default model
        EOF
        juju config kubernetes-autoscaler juju_scale="$(cat juju_scale.yaml)"
  autoscaler_extra_args:
    type: string
    default: "{}"
    description: |
      yaml or json mapping of string to use as an extra set arguments provided to cluster-autoscaler service.
      if an argument can be specified multiple times, for that key specify a list of values 
      
      https://github.com/charmed-kubernetes/autoscaler/tree/juju/cluster-autoscaler/FAQ.md#what-are-the-parameters-to-ca
      
      example
        cat << EOF > args.yaml
        ---
        scale-down-unneeded-time: 5m0s    # scale down at the 5 min mark
        v: 5                              # verbose logging
        node-group-auto-discovery:
          - label:foo=bar
          - label:fizz=buzz
        EOF
        juju config kubernetes-autoscaler autoscaler_extra_args="$(cat args.yaml)"
